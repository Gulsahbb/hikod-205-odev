import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData(
        primaryColor: Colors.blue, // AppBar rengi
        accentColor: Colors.green, // Vurgulu renk (butonlar için)
        visualDensity: VisualDensity.adaptivePlatformDensity,
      ),
      home: PersonalitySurveyPage(),
    );
  }
}

class PersonalitySurveyPage extends StatefulWidget {
  @override
  _PersonalitySurveyPageState createState() => _PersonalitySurveyPageState();
}

class _PersonalitySurveyPageState extends State<PersonalitySurveyPage> {
  // Form verileri
  TextEditingController nameController = TextEditingController();
  TextEditingController surnameController = TextEditingController();
  String? selectedGender;
  bool isAdult = false;
  bool isSmoker = false;
  double dailyCigarettes = 0;

  // Cinsiyet seçimi için liste
  List<String> genderOptions = ['Erkek', 'Kadın', 'Diğer'];

  // Formu gönderme işlemi
  void submitForm() {
    // Formu doldurduktan sonra bilgileri ResultPage'e gönderiyoruz
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) => ResultPage(
          name: nameController.text,
          surname: surnameController.text,
          gender: selectedGender ?? "Seçilmedi",
          isAdult: isAdult,
          isSmoker: isSmoker,
          dailyCigarettes: dailyCigarettes,
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.blue, // AppBar rengi
        title: Text("Kişilik Anketi"),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: SingleChildScrollView(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // Ad ve Soyad TextField'ları
              TextField(
                controller: nameController,
                decoration: InputDecoration(
                  labelText: 'Adınız',
                  labelStyle: TextStyle(color: Colors.blue),
                  filled: true,
                  fillColor: Colors.grey[200], // Açık gri arka plan
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(10),
                    borderSide: BorderSide.none,
                  ),
                ),
              ),
              SizedBox(height: 10),
              TextField(
                controller: surnameController,
                decoration: InputDecoration(
                  labelText: 'Soyadınız',
                  labelStyle: TextStyle(color: Colors.blue),
                  filled: true,
                  fillColor: Colors.grey[200],
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(10),
                    borderSide: BorderSide.none,
                  ),
                ),
              ),
              SizedBox(height: 20),

              // Cinsiyet Seçimi
              DropdownButton<String>(
                value: selectedGender,
                hint: Text("Cinsiyetinizi Seçin"),
                onChanged: (newValue) {
                  setState(() {
                    selectedGender = newValue;
                  });
                },
                items: genderOptions.map((gender) {
                  return DropdownMenuItem(
                    value: gender,
                    child: Text(gender),
                  );
                }).toList(),
                isExpanded: true,
                dropdownColor: Colors.white,
                iconEnabledColor: Colors.blue,
              ),

              SizedBox(height: 20),

              // Reşit Olma Durumu (Checkbox)
              Row(
                children: [
                  Checkbox(
                    value: isAdult,
                    onChanged: (value) {
                      setState(() {
                        isAdult = value!;
                      });
                    },
                    activeColor: Colors.green,
                  ),
                  Text('Reşit misiniz?'),
                ],
              ),

              // Sigara Kullanımı Durumu (Switch)
              Row(
                children: [
                  Switch(
                    value: isSmoker,
                    onChanged: (value) {
                      setState(() {
                        isSmoker = value;
                      });
                    },
                    activeColor: Colors.green,
                  ),
                  Text('Sigara kullanıyor musunuz?'),
                ],
              ),

              // Sigara kullanıyorsa Slider'ı gösterme
              if (isSmoker)
                Column(
                  children: [
                    Text(
                        "Günlük Sigara Sayısı: ${dailyCigarettes.toStringAsFixed(0)}"),
                    Slider(
                      value: dailyCigarettes,
                      min: 0,
                      max: 50,
                      divisions: 50,
                      onChanged: (value) {
                        setState(() {
                          dailyCigarettes = value;
                        });
                      },
                    ),
                  ],
                ),
            
              SizedBox(height: 20),

              // Bilgilerimi Gönder Butonu
              ElevatedButton(
                onPressed: submitForm,
                style: ElevatedButton.styleFrom(
                  primary: Colors.green, // Butonun arka plan rengi
                  padding: EdgeInsets.symmetric(vertical: 15),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                ),
                child: Text("Bilgilerimi Gönder"),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// Sonuçları gösterecek sayfa
class ResultPage extends StatelessWidget {
  final String name;
  final String surname;
  final String gender;
  final bool isAdult;
  final bool isSmoker;
  final double dailyCigarettes;

  ResultPage({
    required this.name,
    required this.surname,
    required this.gender,
    required this.isAdult,
    required this.isSmoker,
    required this.dailyCigarettes,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.blue,
        title: Text("Sonuçlar"),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text("Ad: $name", style: TextStyle(fontSize: 18)),
            Text("Soyad: $surname", style: TextStyle(fontSize: 18)),
            Text("Cinsiyet: $gender", style: TextStyle(fontSize: 18)),
            Text("Reşit: ${isAdult ? 'Evet' : 'Hayır'}", style: TextStyle(fontSize: 18)),
            Text("Sigara Kullanıyor: ${isSmoker ? 'Evet' : 'Hayır'}", style: TextStyle(fontSize: 18)),
            if (isSmoker)
              Text("Günlük Sigara Sayısı: ${dailyCigarettes.toStringAsFixed(0)}", style: TextStyle(fontSize: 18)),
          ],
        ),
      ),
    );
  }
}
